format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
meta:
  bitrise.io:
    stack: osx-xcode-15.0.x
    machine_type_id: g2-m1.4core
app:
  envs:
  - BITRISE_PROJECT_PATH: Testy.xcodeproj
  - BITRISE_SCHEME: Testy
  - BITRISE_PACKAGE_TEST_SCHEME: MyLibraryTests
  - BITRISE_DISTRIBUTION_METHOD: development
pipelines:
  test:
    stages:
    - build_tests: {}
    - run_tests: {}
    - upload_testflight: {}
  release:
    stages:
    - release: {}
stages:
  build_tests:
    title: Build for testing
    workflows:
    - build_for_testing: {}
  run_tests:
    title: Stage with variables
    abort_on_fail: true
    workflows:
    - run_tests_default_locale: {}
    - run_tests_swedish_locale: {}
  upload_testflight:
    workflows:
    - upload_testflight: {}
  release:
    workflows:
    - create_github_release: {}
workflows:
  build_for_testing:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6.1.1: {}
    - install-bundler: {}
    - script@1.1.6:
        title: Validate SwiftLint plugin
        inputs:
        - content: |-
            #!/usr/bin/env bash

            mkdir -p ~/Library/org.swift.swiftpm/security
            cp -r ./.swiftplugin/security/ ~/Library/org.swift.swiftpm/security
    - script@1.1.6:
        title: Build for testing
        inputs:
        - content: |-
            #!/usr/bin/env bash

            bundle exec fastlane build_for_testing
    - slack@4:
        is_always_run: true
        run_if: .IsBuildFailed
        inputs:
        - channel_on_error: test-ci
        - webhook_url: $SLACK_WEBHOOK_URL
        - webhook_url_on_error: $SLACK_WEBHOOK_URL
        - is_debug_mode: "yes"
    - deploy-to-bitrise-io@2:
        inputs:
        - pipeline_intermediate_files: |-
            $BITRISE_SOURCE_DIR/Testy.xcodeproj:BITRISE_PROJECT_FILE_PATH
            $BITRISE_SOURCE_DIR/Gemfile:BITRISE_GEMFILE_PATH
            $BITRISE_SOURCE_DIR/Gemfile.lock:BITRISE_GEMFILE_LOCK_PATH
            $BITRISE_SOURCE_DIR/fastlane:BITRISE_FASTLANE_PATH
            $BITRISE_DEPLOY_DIR:BITRISE_DEPLOY_DIR
  clone:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6.1.1: {}
    - install-bundler: {}
    - script@1.1.6:
        title: Validate SwiftLint plugin
        inputs:
        - content: |-
            #!/usr/bin/env bash

            mkdir -p ~/Library/org.swift.swiftpm/security
            cp -r ./.swiftplugin/security/ ~/Library/org.swift.swiftpm/security
  create_github_release:
    summary: Create a GitHub release by comparing git tags.
    envs:
    - ENV_CHANGELOG: $BITRISE_SOURCE_DIR/changelog.txt
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6.1.1:
        inputs:
        - fetch_tags: "yes"
    - install-bundler: {}
    - script@1.1.6:
        title: Validate SwiftLint plugin
        inputs:
        - content: |-
            #!/usr/bin/env bash

            mkdir -p ~/Library/org.swift.swiftpm/security
            cp -r ./.swiftplugin/security/ ~/Library/org.swift.swiftpm/security
    - script@1:
        title: Generate changelog file to be used when creating release.
        inputs:
        - content: |-
            #!/usr/bin/env bash

            # Generate a changelog in the root of the source
            bash $BITRISE_SOURCE_DIR/Scripts/list_release_changes.sh >> $BITRISE_SOURCE_DIR/changelog.txt
    - script@1:
        title: Create a release in GitHub.
        inputs:
        - content: |-
            #!/usr/bin/env bash

            bundle exec fastlane create_github_release changelog:$ENV_CHANGELOG
  create_github_tag:
    summary: Create a git tag from latest commit.
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6.1.1:
        inputs:
        - fetch_tags: "yes"
    - install-bundler: {}
    - script@1.1.6:
        title: Validate SwiftLint plugin
        inputs:
        - content: |-
            #!/usr/bin/env bash

            mkdir -p ~/Library/org.swift.swiftpm/security
            cp -r ./.swiftplugin/security/ ~/Library/org.swift.swiftpm/security
    - script@1:
        title: Create a git tag and push remotely.
        inputs:
        - content: |-
            #!/usr/bin/env bash

            bundle exec fastlane create_git_tag
  run_tests:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6.1.1: {}
    - install-bundler: {}
    - script@1.1.6:
        title: Validate SwiftLint plugin
        inputs:
        - content: |-
            #!/usr/bin/env bash

            mkdir -p ~/Library/org.swift.swiftpm/security
            cp -r ./.swiftplugin/security/ ~/Library/org.swift.swiftpm/security
    - script@1.1.6:
        title: Build and run tests with system language and region
        inputs:
        - content: "#!/usr/bin/env bash\n\nbundle exec fastlane tests          "
  run_tests_default_locale:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - pull-intermediate-files@1:
        inputs:
        - artifact_sources: build_tests.build_for_testing
    - change-workdir@1.0.3:
        inputs:
        - path: $BITRISE_DEPLOY_DIR/..
        - is_create_path: false
    - install-bundler:
        inputs:
        - gemfile_path: $BITRISE_GEMFILE_LOCK_PATH
    - script@1.1.6:
        title: Run tests with system language and region
        inputs:
        - content: |-
            #!/usr/bin/env bash

            bundle exec fastlane tests_without_building
  run_tests_swedish_locale:
    envs:
    - ENV_LANGUAGE: sv
    - ENV_REGION: SE
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - pull-intermediate-files@1:
        inputs:
        - artifact_sources: build_tests.build_for_testing
    - change-workdir@1.0.3:
        inputs:
        - path: $BITRISE_DEPLOY_DIR/..
        - is_create_path: false
    - install-bundler:
        inputs:
        - gemfile_path: $BITRISE_GEMFILE_LOCK_PATH
    - script@1.1.6:
        title: Run tests with Swedish language and region
        inputs:
        - content: |-
            #!/usr/bin/env bash

            bundle exec fastlane tests_without_building test_language:$ENV_LANGUAGE test_region:$ENV_REGION
  upload_testflight:
    summary: Fakes an upload to TestFlight.
    description: This workflow will just echo some text by running a script.
    steps:
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash

            echo "Upload to TestFlight"
trigger_map:
- type: push
  push_branch: main
  workflow: create_github_tag
- tag: release/*
  workflow: create_github_release
